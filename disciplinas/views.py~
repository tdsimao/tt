
from  django.http import HttpResponse, HttpResponseRedirect, HttpResponseForbidden
from  django.template.loader import  get_template
from django.template import Context
from django.template import RequestContext

from django.shortcuts import render_to_response
from django.views.generic.base import TemplateView

from django.core.context_processors import csrf

from models import Grade 
from forms import GradeForm
from django.contrib.auth.models import User
from django.shortcuts import get_object_or_404



def list(request):
    print Grade.objects.all().filter(user = request.user)
    return render_to_response('grade/list.html',
                              {'grades' : Grade.objects.all().filter(user = request.user)})
    
    
def get(request, idObj = 1):
    return render_to_response('grade/get.html',
                              {'grade' : Grade.objects.get(id = idObj)})  
    
    
def create(request):
	form = GradeForm(request.POST or None)
	
	if request.method == 'POST' and form.is_valid():
		form.save()
		return HttpResponseRedirect('/grades/')

	context = RequestContext(request, {'form': form})
	return render_to_response('grade/create.html', context)  


def delete(request, idObj):
    grade = Grade.objects.get(pk=idObj)

    if request.method == "POST":
        grade.delete()
        return HttpResponseRedirect('/grades/')

    context = RequestContext(request, {'grade': grade})
    return render_to_response('grade/delete.html', context)


def update(request, idObj):
	grade = Grade.objects.get(pk=idObj)
	
	if request.method == 'POST':
		form = GradeForm(request.POST, instance=grade)

		if form.is_valid():
			form.save()
			return HttpResponseRedirect('/grades/')

	else:
		form = GradeForm(instance=grade)
		
	context = RequestContext(request, {'form': form, 'idObj': idObj})
	return render_to_response('grade/update.html', context)	

    
